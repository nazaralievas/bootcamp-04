# разюор дз
# Напишите программу, чтобы пользователь мог вводить слова сколько угодно раз до тех пор ПОКА он не введёт слово exit
vvod = input('Введите предложение: ')
while vvod != 'exit':
    vvod = input('Введите снова: ')



# на уроке мы прошли с вами еще один типа данных - словари или по-английски dictionary
# в словаре элемент состоит из ключа и значения
# ключом могут быть числа, строки, кортежи
# значением могут быть числа, строки, списки, кортежи, множества, словари

student = {'name': 'Aman',
            'age': 14,
            'food': ['manty', 'plov']}

# в списках мы получали нужный элемент используя индексы
# в словарях же используют ключи
# чтобы узнать возраст студента, мы вводим значение соответствующего ключа:
print(student['age']) # выводит 14
print(student['food']) # выводит ['manty', 'plov']


# если мы хотим поменять возраст студента, указываем нужный ключ и задаём ему новое значение
# вот так:
student['age'] = 15
# или так:
student['age'] = student['age'] + 1 # добавили 1 год к его возрасту

# если хотим добавить дополнительную информацию о студенте, например в каких группах он учится
# добавляем к нужной переменной новую пару ключ-значение вот таким образом
student['group'] = ('bootcamp-04-pt', 'вёрстка')

# print(student) покажет обновлённый словарь в котором есть информация о группах:
# student = {'name': 'Aman',
#             'age': 14,
#             'food': ['manty', 'plov'],
#             'group': ('bootcamp-04-pt', 'вёрстка')}


# как вы видите, значением к словарях могут быть списки
# и когда мы делали print(student['food']), выводилось ['manty', 'plov']
# то есть это обычный список, который можно дополнить. Давайте добавим еще одно блюдо в список любимых блюд:
student['food'].append('pizza')

# если мы сделаем print(student) мы увидим такой обновлённый словарь:
# student = {'name': 'Aman',
#             'age': 14,
#             'food': ['manty', 'plov', 'pizza'],
#             'group': ('bootcamp-04-pt', 'вёрстка')}

# можно обратиться к списку и узнать блюдо под индексом 0:
print(student['food'][0])

# давайте теперь вообще удалим информацию о любимых блюдах студента
# для этого использую оператор del (от английского слова delete - удалить)
del student['food']

# и если мы сделаем print(student) мы увидим такой обновлённый словарь без информации о любимой еде:
# student = {'name': 'Aman',
#             'age': 14,
#             'group': ('bootcamp-04-pt', 'вёрстка')}



# теперь рассмотрим методы словаря:
# метод get позволяет нам вывести значение под нужным ключом:
print(student.get('age')) # покажет 15

# но если в get() передать ключ, которого не существует, например у нас нет ключа "pol"
print(student.get('pol'))
# то в ответ мы получим None

# если бы мы обращались к несуществующему ключу обычным способом:
print(student['pol'])
# это привело бы к ошибке



# метод keys выводит нам только ключи
print(student.keys())

# метод values выводит только значения
print(student.values())

# и ключи и значение можно итерировать, то есть запустить по циклу
for n in student.values():
    print(n)

# метод items выводит пару ключ-значение
print(student.items())
# если вы хотите запустить по циклу пары ключ-значение, то нужно 2 переменных:
# в первой переменной "k" будут храниться ключи
# во второй переменной "v" будут храниться значения
for k, v in student.items():
    print(k, v)


# представим что у нас есть отдельный словарь, в котором хранятся оценки за биологию, геометрию и русский:
grades = {'bio': 4,
          'geo': 3,
          'russ': 4}

# давайте этот словарь интегрируем в наш основной словарь с информацией о студенте вот таким образом:
student = {'name': 'Aman',
            'age': 14,
            'food': ['manty', 'plov'],
            'group': ('bootcamp-04-pt', 'вёрстка'),
            'grades': {'bio': 4,
                        'geo': 3,
                        'russ': 4}}

# такая структура со вложенными словарями позволяем нам удобно хранить полную понятную информацию

# теперь если мы захотим узнать оценки студента, мы можем обратиться по ключу
print(student['grades'])

# а если мы хотим узнать не все оценки, а оценку только за биологию, мы добавляем в запрос еще один ключ
print(student['grades']['bio'])

# если мы хотим исправить оценку за геометрию с тройки на пятерку:
student['grades']['geo'] = 5