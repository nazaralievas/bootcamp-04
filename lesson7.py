# # разбор дз 1
# поменять "Светуня" на 'Светлана'
parochki = [["Елена", "Пётр"], ["Артур", "Светуня"]]
parochki[1][1] = 'Светлана'


# добавить новую пару танцоров new_dancers в список parochki
new_dancers = ["Олег", "Тимур"]
# Правильным решением было использовать append:
parochki.append(new_dancers) # [['Елена', 'Пётр'], ['Артур', 'Светлана'], ['Олег', 'Тимур']]

# потому что extend давал такой результат:
parochki.extend(new_dancers) # [['Елена', 'Пётр'], ['Артур', 'Светлана'], 'Олег', 'Тимур']
print(parochki)


# разбор дз: найти и удалить 2 наибольших числа из списка. Способ первый:
nums = [4, 6, 7, 99, 34, 12, 8]

print(max(nums)) # с помощью функции max() узнали какое число самое большое в сниске nums, в нашем случае это 99
nums.remove(99) # с помощью remove удалили 99

# или мы можем предыдущие 2 строки кода объединить в одну строку вот так:
nums.remove(max(nums)) # нашли и сразу удалили наибольшее число
nums.remove(max(nums)) # нашли и сразу удалили наибольшее число


# 2 способ
nums = [4, 6, 7, 99, 34, 12, 8]
sorted_nums = sorted(nums) # в переменную sorted_nums сохраняем отсортированный список
print(sorted_nums) # вот так он выглядит [4, 6, 7, 8, 12, 34, 99] 
sorted_nums.pop() # если в метод pop() ничего не передавать, то он просто удаляет последний элемент из списка
sorted_nums.pop() # удалили еще раз последний элемент
print(sorted_nums) # и теперь список выглядит вот так [4, 6, 7, 8, 12] так как дважды удалили поеследние элементы


# 3 способ
nums = [4, 6, 7, 99, 34, 12, 8]
nums.sort() # с помошь. метода sort() мы поменяли список nums и сделали его отсортированным и теперь он выглядит вот так [4, 6, 7, 8, 12, 34, 99]
print(nums[0:-2]) # взяли слайс от начала и не включая последние 2 элемента (так как последние 2 элемента самые большие в списке)


# слайсы можно брать как кусками так и с шагом (взять каждый второй или каждый третий, четвертый элемент)
nums = [4, 6, 7, 99, 34, 12, 8]
print(nums[1::2]) # выведет [6, 99, 12] то есть начиная с элемента под индексом 1 и каждый второй элемент после
print(nums[-2::-2]) # [12, 99, 6]



# строку можно превратить в список:
products = "moloko, hleb, chai, muka, sok" # это строка
# c помощью split() мы сделаем из строки список, раздробив строку по запятой:
products_list = products.split(',')
print(products_list) # ['moloko,', 'hleb,', 'chai,', 'muka,', 'sok']

# представим, что нам нужно добавить в этот список туалетную бумагу и она должна стоять на первом месте
# это можно сделать с помощью метода insert, где внутри скобок мы указываем куда (по какому адресу) мы хотим вставить и что хотим вставить
products_list.insert(0, 'tualetnaya bumaga') # на нулевой индекс вставляем 'tualetnaya bumaga'
# и теперь наш сисок выглядит вот так:
['tualetnaya bumaga', 'moloko,', 'hleb,', 'chai,', 'muka,', 'sok']

# если хотим вставить между moloko и hleb еще один продукт, например черешню: 
products_list.insert(2, 'chereshnya')


# рассмотрим новый тип данных - set или множества
names = ['Kate', 'Tom', 'Kate', 'Piter', 'Nick']
names = set(names) # список names мы превратили в множество 
print(names) # выдаст {'Kate', 'Tom', 'Piter', 'Nick'} потому что в множествах невозможны дубликаты

names = {'Kate', 'Tom', 'Kate', 'Piter', 'Nick'}
# даже если мы вот так создадим set и впишем двух Kate, то при принте второй Kate не будет

# чтобы добавить в множество новый элемент используем метод add
names.add('Sara')

# чтобы удалить используем remove
names.remove('Tom')

# чтобы удалить элемент можно воспользоваться и pop но он нам удалит любой рандомный элемент
names.pop()
# почему? потому что в множествах нет порядка, нет индексов, нет начала и нет конца. Элементы находятся в одной куче беспорядочно

# однако, можно попробовать отсортировать элементы по порядку:
print(sorted(names)) # но применение sorted вернет нам список
print(len(names)) # функция len без проблем возвращает длину множества (то есть количество элементов в нём)


# еще мы с вами обсудили кортежи (по англ tuple)
# в кортежах возможны дубликаты, но особенностью кортежей является невозможность их изменить
winners = ('Aruuke', 'Bayaman', 'Saadat', 'Aruuke')

# ни добавить, ни удалить элементы из кортежа нельзя
# можно только посчитать количество элементов с определенным значением с помощью метода count
print(winners.count('Aruuke')) # считает сколько Aruuke в кортеже

# и можно узнать индекс 'Aruuke' в кортеже winners
print(winners.index('Aruuke'))
